# Generated by Django 5.0.7 on 2024-07-17 11:54

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to='posts')),
                ('body', models.TextField()),
                ('data', models.DateTimeField(auto_now_add=True)),
                ('view', models.IntegerField(default=0)),
                ('type', models.CharField(choices=[('post', 'POST'), ('article', 'ARTICLE'), ('vacancy', 'VACANCY'), ('case', 'CASE')], default='post', max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('logo', models.ImageField(upload_to='logos')),
                ('about', models.TextField()),
                ('skills', models.CharField(max_length=250)),
                ('location', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('general', 'GENERAL'), ('premium', 'PREMIUM')], default='general', max_length=250)),
                ('rating', models.IntegerField(default=0)),
                ('case', models.CharField(max_length=100)),
                ('vacancy', models.CharField(max_length=250)),
                ('chat', models.CharField(max_length=250)),
                ('target', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(max_length=50)),
                ('avatar', models.ImageField(upload_to='avatars')),
                ('study', models.CharField(max_length=250)),
                ('status', models.CharField(choices=[('general', 'GENERAL'), ('premium', 'PREMIUM')], default='general', max_length=250)),
                ('about', models.TextField()),
                ('skills', models.CharField(max_length=250)),
                ('experience', models.TextField()),
                ('interest', models.CharField(max_length=250)),
                ('location', models.CharField(max_length=50)),
                ('rating', models.IntegerField(default=0)),
                ('case', models.CharField(max_length=250)),
                ('groups', models.CharField(max_length=250)),
                ('chat', models.CharField(max_length=250)),
                ('target', models.CharField(max_length=250)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='blog.post')),
                ('direction', models.CharField(max_length=150)),
            ],
            bases=('blog.post',),
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='blog.post')),
                ('location', models.CharField(max_length=150)),
                ('condition', models.CharField(max_length=150)),
                ('status', models.CharField(choices=[('active', 'ACTIVE'), ('archived', 'ARCHIVED')], default='active', max_length=250)),
            ],
            bases=('blog.post',),
        ),
        migrations.CreateModel(
            name='Vacancy',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='blog.post')),
                ('location', models.CharField(max_length=150)),
                ('requirements', models.CharField(max_length=150)),
                ('status', models.CharField(choices=[('active', 'ACTIVE'), ('archived', 'ARCHIVED')], default='active', max_length=250)),
            ],
            bases=('blog.post',),
        ),
        migrations.AddField(
            model_name='post',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CompanyComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.comment')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PostComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.comment')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
